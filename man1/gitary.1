.TH GITARY 1 "2016-08-21" "Git-Diary" "A diary using Git"
.SH NAME
gitary \- a diary using
.BR git (1)
as a backend
.SH SYNOPSIS
\fBgitary\fP [\fIOPTION\fP]...
.SH DESCRIPTION
Essentially, \fBgitary\fP is a wrapper around \fBgit\fP(1) and your
editor. It's a diary. Everything you write will be committed to a Git
repository. It also provides basic search functions.
.P
Many options open your editor and, when you quit it, any changes will be
committed to your repository. This also includes a \(lqcleanup\(rq step
where all empty files (except for blobs) and directories will be
removed.
.SH OPTIONS
Without any options, \fBgitary\fP lists all entries made today. 
.P
All other arguments are optional and mutual exclusive. Note that they
can start with one, two or no dashes. Furthermore, the very first
character is sufficient, e.g. \fB\-\-edit\fP can be abbreviated by
\fBe\fP.
.TP
\fB\-\-all\fP
List all entries ever made and their subject line. The entries are
printed in two columns: The first column is an identifier (e.g.,
\(lq2016-08-21/12-23-10\(rq) which can be used in other operations like
\fB\-\-edit\fP or \fB\-\-blob\fP to address this particular entry.
.TP
\fB\-\-blob\fP \fIentry\fP
Print the directory where you are supposed to store \(lqblobs\(rq
(images, videos, programs, ...). \fIentry\fP must be an identifier as
printed by listing operations like \fB\-\-all\fP (with or without the
trailing file name \fIentry.md\fP). Alternatively, it could also be the
full path to this particular \fIentry.md\fP.
.TP
\fB\-\-continue\fP
Continue editing the most recent entry.
.TP
\fB\-\-edit\fP \fIentry\fP
Edit the specified \fIentry\fP using an identifier as printed by listing
operations like \fB\-\-all\fP.
.TP
\fB\-\-full\-cleanup\fP
Before committing any changes to the repo, \fBgitary\fP tries to remove
empty entry files and empty directories. It does use some optimization
to speed up that process. If you want to skip these optimizations and
run a full clean up process, use this option.
.TP
\fB\-\-new\fP
Create a new entry today.
.TP
\fB\-\-path\fP
Print the base directory of your Git repository.
.TP
\fB\-\-search\fP \fIregex\fP
Search entire entries and print items that match the given regular
expression. You can use anything that is understood by GNU \fBgrep
\-E\fP.
.TP
\fB\-\-tags\fP \fIregex\fP
Same as \fB\-\-search\fP, but only search in taglines.
.SH CONFIGURATION
All your entries are stored in the data directory. A Git repository will
reside in this directory. By default, \fI$XDG_DATA_HOME/gitary\fP will
be used or \fI$HOME/.local/share/gitary\fP if $\fBXDG_DATA_HOME\fP is
not set. Use the environment variable $\fBGITARY_DATA\fP to change this.
If it's set, then this directory is used.
.P
\fBImportant note:\fP Your data directory must exist and it must
already be initialized as a Git repository. \fBgitary\fP will not do
this for you.
.P
\fBgitary\fP uses whichever $\fBEDITOR\fP and $\fBPAGER\fP you
configured in your \fI~/.profile\fP.
.SH "FILE FORMAT"
\fBgitary\fP does not really care about the file format you use. By
default, it creates files with the extension \(lq.md\(rq, suggesting
Markdown. You can change that by setting $\fBGITARY_FILE_EXTENSION\fP.
.P
There are only two things you should consider:
.IP 1. 4
The very first line of the file should contain a \(lqsubject\(rq for the
entry.
.IP 2. 4
Anywhere in the file, there can be a line starting with \(lqtags:\(rq.
You can use this line to store any tags which you can then search for
using \fB\-\-tags\fP.
.P
.SH ENVIRONMENT
.TP
.B GITARY_DATA
If this variable is set, it must point to a directory where your Git
repository will be stored. You can use this to override the default
location (see \fBFILES\fP below).
.TP
.B GITARY_FILE_EXTENSION
Entry files will use this string as a file name extension. Defaults to
\fB.md\fP.
.TP
.B GITARY_RECENT_ITEMS
When invoked without arguments, \fBgitary\fP shows the most recent
entries. This variable controls how many items are shown. The default is
\fB10\fP.
.SH FILES
.TP
\fI$XDG_DATA_HOME/gitary/\fP
.TQ
\fI$HOME/.local/share/gitary/\fP
Default per-user data directory if $\fBGITARY_DATA\fP is not set. The
$\fBHOME\fP variant is only used if $\fBXDG_DATA_HOME\fP is not set.
.SH BUGS
Currently, no bugs are known. If you find one, we invite you to report
it at the GitHub Issue tracker (http://github.com/vain/gitary/issues).
.SH LICENSE
\fBgitary\fP is released as \(lqPIZZA-WARE\(rq. See the accompanying
\fILICENSE\fP file.
.SH HISTORY
\fBgitary\fP was originally written by Peter Hofmann. The project was
started in August 2009.
.SH "SEE ALSO"
.BR git (1),
.BR bash (1).

function search()
{
	# Only search in tags or the whole entry? Only refs?
	case "$1" in
		-a)
			shift
			PREFIX=""
			MSGPREFIX="everything"
			;;
		-r)
			shift
			PREFIX="\n(-- |\[[[:digit:]]+\])[^\n]*"
			MSGPREFIX="references"
			;;
		*)
			PREFIX="\ntags:[^\n]*"
			MSGPREFIX="tags"
	esac

	SEARCH="$@"

	# "Explode" the list of tags. This'll result in a list of
	# alternative search terms (boolean OR).
	SEARCH='('${SEARCH//[[:space:]]/|}')'

	# gawk will do all the magic.
	gawk '                                                              \
		BEGIN                                                           \
		{                                                               \
			RS="=== ";                                                  \
			print "Searching '"${MSGPREFIX}"' for: '"${SEARCH}"'\n\n";  \
		};                                                              \
		                                                                \
		/'"${PREFIX}${SEARCH}"'/                                        \
		{                                                               \
			ENTRYDATE=FILENAME;                                         \
			gsub(/\.gitary/, "", ENTRYDATE);                            \
			gsub(/\n+$/, "", $0);                                       \
			print "#############################################";      \
			print "               DAY: " ENTRYDATE;                     \
			print "#############################################";      \
			print "\n";                                                 \
			print "=== " $0 "\n\n\n\n";                                 \
		}'                                                              \
		*gitary | "${PAGER[@]}"
}

function edit()
{
	"${EDITOR[@]}" "$1"
	git add .
	git ci -m "Auto-Commit $(date +'%F, %T')"
}

function viewall()
{
	(
	echo
	echo
	for i in *gitary
	do
		BNAME=$(basename "$i")
		BNAME=${BNAME%%.*}
		echo "#############################################"
		echo "               DAY: $BNAME"
		echo "#############################################"
		echo
		echo
		cat "$i"
		echo
		echo
		echo
		echo
	done
	) | "${PAGER[@]}"
}

function checkdatadir()
{
	if [[ ! -d "$DATADIR" ]]
	then
		echo "The data directory ($DATADIR) does not exist yet."
		read -p "Would you like to create it now? [y/N] " ANSWER

		if [[ "$ANSWER" == "Y" ]] || [[ "$ANSWER" == "y" ]]
		then
			mkdir -p "$DATADIR" || exit 1
			cd "$DATADIR" || exit 1
			git init || exit 1
			cd - || exit 1
		else
			exit 1
		fi
	fi
}

# vim: set ft=sh ts=4 sw=4 :
